// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShippingService.Infrastructure;

#nullable disable

namespace ShippingService.Migrations
{
    [DbContext(typeof(ShippingDbContext))]
    partial class ShippingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("shipping")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShippingService.Domain.CustomerAddress", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomerAddresses", "shipping");

                    b.HasData(
                        new
                        {
                            CustomerId = 12345,
                            AddressLine1 = "123 Main St",
                            AddressLine2 = "Apt 101",
                            PostCode = "SW1 1AA"
                        },
                        new
                        {
                            CustomerId = 56789,
                            AddressLine1 = "789 Oak St",
                            AddressLine2 = "Unit 303",
                            PostCode = "AB0 2XY"
                        });
                });

            modelBuilder.Entity("ShippingService.Domain.ShippableProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<decimal>("WeightKg")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("ProductId");

                    b.ToTable("ShippableProducts", "shipping");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("6831ee62-b099-44e7-b3e2-d2cd045cc2f5"),
                            ProductName = "The Girl on the Train",
                            Sku = "TGOTT1",
                            WeightKg = 0.50m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
